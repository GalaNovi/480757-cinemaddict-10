{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract-component.js","webpack:///./src/components/abstract-smart-component.js","webpack:///./src/components/big-card.js","webpack:///./src/components/card.js","webpack:///./src/components/extra-movies.js","webpack:///./src/components/main-movies.js","webpack:///./src/components/menu.js","webpack:///./src/components/movies-container.js","webpack:///./src/components/no-movies-container.js","webpack:///./src/components/profile.js","webpack:///./src/components/sort.js","webpack:///./src/const.js","webpack:///./src/controllers/movie.js","webpack:///./src/controllers/page.js","webpack:///./src/main.js","webpack:///./src/mock/card.js","webpack:///./src/utils/common.js","webpack:///./src/utils/render.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA8C;;AAE/B;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,mEAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAqD;;AAEtC,qCAAqC,2DAAiB;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACT;AACvB;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,8FAA8F,OAAO;;AAErG;AACA,SAAS,4BAA4B;AACrC;;AAEA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA,gDAAgD,KAAK;AACrD;AACA,uDAAuD,OAAO;AAC9D,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA,yBAAyB,eAAe,GAAG,6CAAM,sBAAsB,GAAG,mBAAmB;AAC7F;AACA,kFAAkF,gEAAU,QAAQ;AACpG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;;AAElE,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD,sEAAsE,aAAa;AACnF;;AAEA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA,mDAAmD,gEAAU,WAAW;AACxE;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA,wHAAwH,mCAAmC;AAC3J;;AAEA,oHAAoH,kCAAkC;AACtJ;;AAEA,sHAAsH,6BAA6B;AACnJ;AACA;AACA;;AAEA;AACA;AACA,2GAA2G,gBAAgB;;AAE3H;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sBAAsB,iEAAsB;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7PA;AAAA;AAAA;AAAA;AAAqD;AACE;;AAEvD,qFAAqF,OAAO;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,SAAS;AAClB;AACA;AACA,mBAAmB,gEAAU;AAC7B,2DAA2D,gEAAU;AACrE;;AAEA;AACA;AACA,qCAAqC,KAAK;AAC1C,QAAQ;AACR;AACA,wCAAwC,KAAK;AAC7C,4CAA4C,SAAS;AACrD,yCAAyC,OAAO;AAChD;AACA,kBAAkB,OAAO,SAAS,KAAK;AACvC,0CAA0C,YAAY;AACtD,uCAAuC,eAAe;AACtD;AACA,mGAAmG,4DAA4D;AAC/J,kGAAkG,2DAA2D;AAC7J,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEe,0BAA0B,2DAAiB;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yBAAyB,2DAAiB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACV;AACV;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,gEAAU,SAAS,6CAA6C,+CAA+C;;AAE5K;AACA,iBAAiB,OAAO,gCAAgC,YAAY;AACpE,QAAQ;AACR;AACA;AACA;;AAEA;AACA,wBAAwB,8CAAO;;AAE/B;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEe,8BAA8B,2DAAiB;AAC9D;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,2DAAiB;AAChE;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAqD;;AAErD;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEe,sBAAsB,2DAAiB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA,+DAA+D,uBAAuB;AACtF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEoE;;;;;;;;;;;;;ACvBpE;AAAA;AAAA;AAAA;AAAA;AAA6C;AACP;AACU;;AAEjC;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,wDAAI;AAClC,iCAAiC,4DAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,4DAAM;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;;AAEP;AACA,sDAAsD;AACtD;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;;AAEP;AACA,sDAAsD;AACtD;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;;AAEL;AACA,MAAM,6DAAO;AACb,MAAM,6DAAO;AACb,KAAK;AACL,MAAM,4DAAM;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACE;AACf;AACuB;AACK;AACtB;AACN;AACa;AACE;AACd;AACQ;;AAE/C;AACA;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB;AACA,GAAG;AACH;AACA,cAAc,SAAS;AACvB;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA,yCAAyC,oEAAe;AACxD,oCAAoC,+DAAU;AAC9C,8BAA8B,wDAAI;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,4DAAM,oBAAoB,2DAAO;AACrC,IAAI,4DAAM,kBAAkB,wDAAI;AAChC,IAAI,4DAAM;;AAEV;AACA,MAAM,4DAAM;AACZ;AACA,MAAM,4DAAM;AACZ;AACA;AACA,OAAO;AACP,8CAA8C,6DAAqB;AACnE,mDAAmD,6DAAqB;AACxE,KAAK;AACL,MAAM,4DAAM,kBAAkB,uEAAiB;AAC/C;;AAEA,4EAA4E,kBAAkB;AAC9F;;AAEA;AACA,gCAAgC,0DAAe;;AAE/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,mDAAmD;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,gEAAW;AAClD;AACA;AACA,MAAM,4DAAM;AACZ;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,0EAAoB;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAA0C;AACQ;;AAElD;AACA,mBAAmB,gEAAa;AAChC,2BAA2B,gEAAc;;AAEzC;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAA6C;AACX;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,kEAAY;AACzC,+BAA+B,kEAAY;AAC3C;AACA,8BAA8B,kEAAY;AAC1C,6BAA6B,kEAAY;AACzC;AACA,8CAA8C,6BAA6B,IAAI,wBAAwB,IAAI,wBAAwB;;AAEnI;AACA;AACA;AACA,2DAA2D,SAAS;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;;;;;;;;;;;;;ACnMP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,MAAM,IAAI,QAAQ;AAC9B;;AAEoE;;;;;;;;;;;;;ACjCpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC+B;;AAEjE;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,+CAAQ;AACpE;AACA;;AAEA,mCAAmC,sEAAiB;AACpD;AACA;;AAEA,iCAAiC,sEAAiB;AAClD;AACA;;AAEA;AACA,SAAS,+CAAQ;AACjB;AACA;AACA,SAAS,+CAAQ;AACjB;AACA;AACA,SAAS,+CAAQ;AACjB;AACA;AACA,SAAS,+CAAQ;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEwC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from '../utils/render';\n\nexport default class AbstractComponent {\n  constructor() {\n    this._element = null;\n\n    if (new.target === AbstractComponent) {\n      throw new Error(`Can't instantiate AbstractComponent, only concrete one.`);\n    }\n\n    this.removeElement = this.removeElement.bind(this);\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this.getElement().remove();\n    this._element = null;\n  }\n}\n","import AbstractComponent from \"./abstract-component\";\n\nexport default class AbstractSmartComponent extends AbstractComponent {\n  recoveryListeners() {\n    throw new Error(`Abstract method not implemented: recoveryListeners`);\n  }\n\n  render() {\n    const oldElement = this.getElement();\n    const parent = oldElement.parentElement;\n    this.removeElement();\n    const newElement = this.getElement();\n    parent.replaceChild(newElement, oldElement);\n    this.recoveryListeners();\n  }\n}\n","import AbstractSmartComponent from './abstract-smart-component';\nimport {capitalize, formatTime} from '../utils/common';\nimport {MONTHS} from '../const';\n\nconst getCommentTimeAgoText = (dateTime) => {\n  const secondsAgo = Math.floor((Date.now() - dateTime) / 1000);\n  const minutesAgo = Math.floor((Date.now() - dateTime) / 1000 / 60);\n  const hoursAgo = Math.floor((Date.now() - dateTime) / 1000 / 60 / 60);\n  const daysAgo = Math.floor((Date.now() - dateTime) / 1000 / 60 / 60 / 24);\n\n  if (secondsAgo < 60) {\n    return `now`;\n  } else if (minutesAgo <= 3) {\n    return `a minute ago`;\n  } else if (minutesAgo < 60) {\n    return `a few minutes ago`;\n  } else if (hoursAgo < 2) {\n    return `a hour ago`;\n  } else if (hoursAgo < 24) {\n    return `a few hours ago`;\n  } else if (daysAgo === 1) {\n    return `a day ago`;\n  } else if (daysAgo === 2) {\n    return `a two days ago`;\n  } else {\n    return `more then two days ago`;\n  }\n};\n\nconst createRatingMarkup = (rating) => rating >= 1 ? `<p class=\"film-details__total-rating\">${rating}</p>` : ``;\n\nconst createCommentsMarkup = (comment) => {\n  const {author, text, date, emotion} = comment;\n  const commentTimeAgoText = getCommentTimeAgoText(date);\n\n  return (\n    `<li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"./images/emoji/${emotion}.png\" width=\"55\" height=\"55\" alt=\"emoji\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${text}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${author}</span>\n          <span class=\"film-details__comment-day\">${commentTimeAgoText}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>`\n  );\n};\n\nconst createBigCardMarkup = (movieData) => {\n  const {\n    poster,\n    ageLimit,\n    name,\n    originalName,\n    rating,\n    director,\n    release,\n    duration,\n    genres,\n    description,\n    isOnTheWatchlist,\n    isAlredyWatched,\n    isFavorite\n  } = movieData.movieInfo;\n\n  const {comments} = movieData;\n  const ratingMarkup = createRatingMarkup(rating);\n  const writers = movieData.movieInfo.writers.join(`, `);\n  const actors = movieData.movieInfo.actors.join(`, `);\n  const date = new Date(release.date);\n  const releaseDate = `${date.getDate()} ${MONTHS[date.getMonth() - 1]} ${date.getFullYear()}`;\n  const country = release.country;\n  const genresMarkup = genres.map((genre) => `<span class=\"film-details__genre\">${capitalize(genre)}</span>`).join(``);\n  const commentsMarkup = comments.map((comment) => createCommentsMarkup(comment)).join(``);\n\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"form-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"${poster}\" alt=\"\">\n\n              <p class=\"film-details__age\">${ageLimit}+</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${name}</h3>\n                  <p class=\"film-details__title-original\">Original: ${originalName}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  ${ratingMarkup}\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Director</td>\n                  <td class=\"film-details__cell\">${director}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Writers</td>\n                  <td class=\"film-details__cell\">${writers}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Actors</td>\n                  <td class=\"film-details__cell\">${actors}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Release Date</td>\n                  <td class=\"film-details__cell\">${releaseDate}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Runtime</td>\n                  <td class=\"film-details__cell\">${formatTime(duration)}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Country</td>\n                  <td class=\"film-details__cell\">${country}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Genres</td>\n                  <td class=\"film-details__cell\">\n                    ${genresMarkup}\n                  </td>\n                </tr>\n              </table>\n\n              <p class=\"film-details__film-description\">\n                ${description}\n              </p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\"${isOnTheWatchlist ? ` checked` : ``}>\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\"${isAlredyWatched ? ` checked` : ``}>\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\"${isFavorite ? ` checked` : ``}>\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n        </div>\n\n        <div class=\"form-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n            <ul class=\"film-details__comments-list\">\n              ${commentsMarkup}\n            </ul>\n\n            <div class=\"film-details__new-comment\">\n              <div for=\"add-emoji\" class=\"film-details__add-emoji-label\"></div>\n\n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n              </label>\n\n              <div class=\"film-details__emoji-list\">\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"sleeping\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                  <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"neutral-face\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                  <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-gpuke\" value=\"grinning\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-gpuke\">\n                  <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"grinning\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                  <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`\n  );\n};\n\nexport default class BigCard extends AbstractSmartComponent {\n  constructor(movieData) {\n    super();\n    this._movieData = movieData;\n\n    this._subscribeOnEvents();\n  }\n\n  getTemplate() {\n    return createBigCardMarkup(this._movieData);\n  }\n\n  recoveryListeners() {\n    this._subscribeOnEvents();\n  }\n\n  setCloseButtonHandler(handler) {\n    this.getElement().querySelector(`.film-details__close-btn`)\n      .addEventListener(`click`, handler);\n  }\n\n  setWatchlistButtonCallback(callback) {\n    this._watchlistButtonCallback = callback;\n    this.getElement().querySelector(`.film-details__control-label--watchlist`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._watchlistButtonCallback();\n      });\n  }\n\n  setWatchedButtonCallback(callback) {\n    this._watchedButtonCallback = callback;\n    this.getElement().querySelector(`.film-details__control-label--watched`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._watchedButtonCallback();\n      });\n  }\n\n  setFavoriteButtonCallback(callback) {\n    this._favoriteButtonCallback = callback;\n    this.getElement().querySelector(`.film-details__control-label--favorite`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._favoriteButtonCallback();\n      });\n  }\n\n  _subscribeOnEvents() {\n    this.setWatchlistButtonCallback(this._watchlistButtonCallback);\n    this.setWatchedButtonCallback(this._watchedButtonCallback);\n    this.setFavoriteButtonCallback(this._favoriteButtonCallback);\n  }\n}\n","import AbstractComponent from './abstract-component';\nimport {capitalize, formatTime} from '../utils/common';\n\nconst createRatingMarkup = (rating) => rating >= 1 ? `<p class=\"film-card__rating\">${rating}</p>` : ``;\n\nconst createCardMarkup = (movieData) => {\n  const {\n    name,\n    poster,\n    rating,\n    description,\n    isOnTheWatchlist,\n    isAlredyWatched,\n    isFavorite\n  } = movieData.movieInfo;\n\n  const {comments} = movieData;\n  const year = new Date(movieData.movieInfo.release.date).getFullYear();\n  const commentsNumber = comments.length;\n  const duration = formatTime(movieData.movieInfo.duration);\n  const genres = movieData.movieInfo.genres.map((genre) => capitalize(genre)).join(` `);\n  const ratingMarkup = createRatingMarkup(rating);\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${name}</h3>\n      ${ratingMarkup}\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__duration\">${duration}</span>\n        <span class=\"film-card__genre\">${genres}</span>\n      </p>\n      <img src=\"${poster}\" alt=\"${name}\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${description}</p>\n      <a class=\"film-card__comments\">${commentsNumber} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist${isOnTheWatchlist ? ` film-card__controls-item--active` : ``}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched${isAlredyWatched ? ` film-card__controls-item--active` : ``}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite${isFavorite ? ` film-card__controls-item--active` : ``}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class Card extends AbstractComponent {\n  constructor(movieData) {\n    super();\n    this._movieData = movieData;\n  }\n\n  getTemplate() {\n    return createCardMarkup(this._movieData);\n  }\n\n  setOpenHandler(handler) {\n    const openingBigCardElements = [\n      this.getElement().querySelector(`.film-card__poster`),\n      this.getElement().querySelector(`.film-card__title`),\n      this.getElement().querySelector(`.film-card__comments`),\n    ];\n\n    openingBigCardElements.forEach((element) => {\n      element.addEventListener(`click`, handler);\n    });\n  }\n\n  setWatchlistButtonCallback(callback) {\n    this._watchlistButtonCallback = callback;\n    this.getElement().querySelector(`.film-card__controls-item--add-to-watchlist`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._watchlistButtonCallback();\n      });\n  }\n\n  setWatchedButtonCallback(callback) {\n    this._watchedButtonCallback = callback;\n    this.getElement().querySelector(`.film-card__controls-item--mark-as-watched`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._watchedButtonCallback();\n      });\n  }\n\n  setFavoriteButtonCallback(callback) {\n    this._favoriteButtonCallback = callback;\n    this.getElement().querySelector(`.film-card__controls-item--favorite`)\n      .addEventListener(`click`, (evt) => {\n        evt.preventDefault();\n        this._favoriteButtonCallback();\n      });\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createExtraMoviesMarkup = (heading) => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">${heading}</h2>\n      <div class=\"films-list__container\"></div>\n    </section>`\n  );\n};\n\nexport default class ExtraMovies extends AbstractComponent {\n  constructor(heading) {\n    super();\n    this._heading = heading;\n  }\n\n  getTemplate() {\n    return createExtraMoviesMarkup(this._heading);\n  }\n\n  getMoviesListElement() {\n    return this.getElement().querySelector(`.films-list__container`);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createMainMoviesMarkup = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n      <div class=\"films-list__container\"></div>\n      <button class=\"films-list__show-more\">Show more</button>\n    </section>`\n  );\n};\n\nexport default class MainMovies extends AbstractComponent {\n  constructor() {\n    super();\n    this._isNeedSetHandler = true;\n  }\n\n  getTemplate() {\n    return createMainMoviesMarkup();\n  }\n\n  setCallback(callback) {\n    this._callback = callback;\n\n    if (this._isNeedSetHandler) {\n      this.getElement().querySelector(`.films-list__show-more`)\n        .addEventListener(`click`, () => this._callback());\n    }\n\n    this._isNeedSetHandler = false;\n  }\n\n  toggleShowLoadButton(areAllMoviesShown) {\n    const loadMoreButton = this.getElement().querySelector(`.films-list__show-more`);\n    if (areAllMoviesShown) {\n      loadMoreButton.style.display = `none`;\n    } else {\n      loadMoreButton.style.display = ``;\n    }\n  }\n\n  getMoviesList() {\n    return this.getElement().querySelector(`.films-list__container`);\n  }\n}\n","import AbstractComponent from './abstract-component';\nimport {capitalize} from '../utils/common';\nimport {FILTERS} from '../const';\n\nconst filterParameters = {\n  all: ``,\n  watchlist: (movie) => movie.movieInfo.isOnTheWatchlist,\n  history: (movie) => movie.movieInfo.isAlredyWatched,\n  favorites: (movie) => movie.movieInfo.isFavorite,\n};\n\nconst createFilterMarkup = (filter, movies) => {\n  const activeClass = filter === `all` ? ` main-navigation__item--active` : ``;\n  const counterMarkup = filter === `all` ? `All movies` : `${capitalize(filter)} <span class=\"main-navigation__item-count\">${movies.filter(filterParameters[filter]).length}</span>`;\n\n  return (\n    `<a href=\"#${filter}\" class=\"main-navigation__item${activeClass}\">\n      ${counterMarkup}\n    </a>`\n  );\n};\n\nconst createMenuMarkup = (moviesData) => {\n  const filtersMarkup = FILTERS.map((filter) => createFilterMarkup(filter, moviesData)).join(``);\n\n  return (\n    `<nav class=\"main-navigation\">\n      ${filtersMarkup}\n      <a href=\"#stats\" class=\"main-navigation__item main-navigation__item--additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class Menu extends AbstractComponent {\n  constructor(moviesData) {\n    super();\n    this._moviesData = moviesData;\n  }\n\n  getTemplate() {\n    return createMenuMarkup(this._moviesData);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createMoviesContainerMarkup = () => {\n  return (\n    `<section class=\"films\">\n    </div>`\n  );\n};\n\nexport default class MoviesContainer extends AbstractComponent {\n  getTemplate() {\n    return createMoviesContainerMarkup();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createNoMoviesContainerMarkup = () => {\n  return (\n    `<section class=\"films\">\n      <section class=\"films-list\">\n        <h2 class=\"films-list__title\">There are no movies in our database</h2>\n      </section>\n    </div>`\n  );\n};\n\nexport default class NoMoviesContainer extends AbstractComponent {\n  getTemplate() {\n    return createNoMoviesContainerMarkup();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createProfileRatingMarkup = (moviesAmount) => {\n  let markup = ``;\n\n  if (moviesAmount > 0 && moviesAmount <= 10) {\n    markup = `<p class=\"profile__rating\">Novice</p>`;\n  } else if (moviesAmount > 10 && moviesAmount <= 20) {\n    markup = `<p class=\"profile__rating\">Fan</p>`;\n  } else if (moviesAmount > 20) {\n    markup = `<p class=\"profile__rating\">Movie Buff</p>`;\n  }\n\n  return markup;\n};\n\nconst createProfileMarkup = (moviesAmount) => {\n  const profileRatingMarkup = createProfileRatingMarkup(moviesAmount);\n\n  return (\n    `<section class=\"header__profile profile\">\n      ${profileRatingMarkup}\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class Profile extends AbstractComponent {\n  constructor(moviesAmount) {\n    super();\n    this._moviesAmount = moviesAmount;\n  }\n\n  getTemplate() {\n    return createProfileMarkup(this._moviesAmount);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst SORT_LINK_ACTIVE_CLASS = `sort__button--active`;\nconst sortParameters = {\n  date: (a, b) => b.movieInfo.release.date - a.movieInfo.release.date,\n  rating: (a, b) => b.movieInfo.rating - a.movieInfo.rating,\n};\n\nconst createSortMarkup = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=\"default\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"date\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"rating\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sort extends AbstractComponent {\n  constructor() {\n    super();\n    this._sortType = `default`;\n    this._sortLinkActive = this.getElement().querySelector(`.${SORT_LINK_ACTIVE_CLASS}`);\n  }\n\n  get sortType() {\n    return this._sortType;\n  }\n\n  getTemplate() {\n    return createSortMarkup();\n  }\n\n  sortData(data) {\n    if (this._sortType === `default`) {\n      return data.slice();\n    } else {\n      return data.slice().sort(sortParameters[this._sortType]);\n    }\n  }\n\n  setCallback(callback) {\n    this.getElement().addEventListener(`click`, (evt) => {\n      if (evt.target.tagName === `A`) {\n        this._setCurrentSortType(evt);\n        callback();\n      }\n    });\n  }\n\n  _setCurrentSortType(evt) {\n    evt.preventDefault();\n    const newSortLink = evt.target;\n    const newSortType = evt.target.getAttribute(`data-sort-type`);\n    this._changeActiveSortLink(newSortLink);\n    this._sortType = newSortType;\n  }\n\n  _changeActiveSortLink(newSortLink) {\n    this._sortLinkActive.classList.remove(SORT_LINK_ACTIVE_CLASS);\n    newSortLink.classList.add(SORT_LINK_ACTIVE_CLASS);\n    this._sortLinkActive = newSortLink;\n  }\n}\n","const EXTRA_MOVIES_HEADINGS = [`Top rated`, `Most commented`];\nconst FILTERS = [`all`, `watchlist`, `history`, `favorites`];\nconst EMOTIONS = [`smile`, `sleeping`, `puke`, `angry`];\nconst MONTHS = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `Jule`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n\nconst Position = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n};\n\nexport {EXTRA_MOVIES_HEADINGS, FILTERS, EMOTIONS, MONTHS, Position};\n","import BigCard from '../components/big-card';\nimport Card from '../components/card';\nimport {render, replace} from '../utils/render';\n\nexport default class MovieController {\n  constructor(container, onDataChange) {\n    this._container = container;\n    this._onDataChange = onDataChange;\n  }\n\n  render(movieData) {\n    const oldCardComponent = this._cardComponent;\n    const oldBigCardComponent = this._bigCardComponent;\n\n    this._id = movieData.id;\n    this._cardComponent = new Card(movieData);\n    this._bigCardComponent = new BigCard(movieData);\n\n    const onEsqKeyDown = (evt) => {\n      if (evt.key === `Escape` || evt.key === `Esc`) {\n        evt.preventDefault();\n        closeBigCard();\n      }\n    };\n\n    const openBigCard = () => {\n      render(document.body, this._bigCardComponent);\n      document.addEventListener(`keydown`, onEsqKeyDown);\n    };\n\n    const closeBigCard = () => {\n      this._bigCardComponent.getElement().remove();\n      document.removeEventListener(`keydown`, onEsqKeyDown);\n    };\n\n    const onCloseButtonClick = () => {\n      closeBigCard();\n    };\n\n    this._cardComponent.setOpenHandler((evt) => {\n      evt.preventDefault();\n      openBigCard();\n    });\n\n    this._bigCardComponent.setCloseButtonHandler(onCloseButtonClick);\n\n    [this._cardComponent, this._bigCardComponent].forEach((component) => {\n      component.setWatchlistButtonCallback(() => {\n        this._onDataChange(movieData, Object.assign({}, movieData, {\n          movieInfo: Object.assign(movieData.movieInfo, {\n            isOnTheWatchlist: !movieData.movieInfo.isOnTheWatchlist\n          })\n        }));\n      });\n\n      component.setWatchedButtonCallback(() => {\n        this._onDataChange(movieData, Object.assign({}, movieData, {\n          movieInfo: Object.assign(movieData.movieInfo, {\n            isAlredyWatched: !movieData.movieInfo.isAlredyWatched\n          })\n        }));\n      });\n\n      component.setFavoriteButtonCallback(() => {\n        this._onDataChange(movieData, Object.assign({}, movieData, {\n          movieInfo: Object.assign(movieData.movieInfo, {\n            isFavorite: !movieData.movieInfo.isFavorite\n          })\n        }));\n      });\n    });\n\n    if (oldCardComponent && oldBigCardComponent) {\n      replace(this._cardComponent, oldCardComponent);\n      replace(this._bigCardComponent, oldBigCardComponent);\n    } else {\n      render(this._container, this._cardComponent);\n    }\n  }\n\n  removeElements() {\n    this._cardComponent.removeElement();\n    this._bigCardComponent.removeElement();\n  }\n\n  get id() {\n    return this._id;\n  }\n}\n","import MainMovies from '../components/main-movies';\nimport ExtraMovies from '../components/extra-movies';\nimport Menu from '../components/menu';\nimport MoviesContainer from '../components/movies-container';\nimport NoMoviesContainer from '../components/no-movies-container';\nimport Profile from '../components/profile';\nimport Sort from '../components/sort';\nimport MovieController from '../controllers/movie';\nimport {getNextItemsIterator} from '../utils/common';\nimport {render} from '../utils/render';\nimport {EXTRA_MOVIES_HEADINGS} from '../const';\n\nconst START_MOVIES_AMOUNT = 5;\nconst ADD_MOVIES_AMOUNT = 5;\nconst EXTRA_MOVIES_AMOUNT = 2;\n\nconst extraMoviesParameters = {\n  topRated: {\n    filter: ({movieInfo}) => movieInfo.rating >= 1,\n    sort: (a, b) => b.movieInfo.rating - a.movieInfo.rating,\n  },\n  mostCommented: {\n    filter: ({comments}) => comments.length >= 1,\n    sort: (a, b) => b.comments.length - a.comments.length,\n  },\n};\n\nexport class PageController {\n  constructor(container) {\n    this._container = container;\n    this._extraMoviesAmount = EXTRA_MOVIES_AMOUNT;\n    this._renderedMoviesAmount = START_MOVIES_AMOUNT;\n    this._moviesContainerComponent = new MoviesContainer();\n    this._mainMoviesComponent = new MainMovies();\n    this._sortComponent = new Sort();\n    this._shownMoviesControllers = [];\n    this._moviesData = [];\n\n    this._onDataChange = this._onDataChange.bind(this);\n  }\n\n  render(moviesData) {\n    this._moviesData = moviesData;\n    const headerElement = this._container.querySelector(`.header`);\n    const mainElement = this._container.querySelector(`.main`);\n    const alredyWatchedMoviesNumber = moviesData.filter((movie) => movie.movieInfo.isAlredyWatched).length;\n    const topRatedMovies = this._getExtraMovies(moviesData, `topRated`);\n    const mostCommentedMovies = this._getExtraMovies(moviesData, `mostCommented`);\n\n    render(headerElement, new Profile(alredyWatchedMoviesNumber));\n    render(mainElement, new Menu(moviesData));\n    render(mainElement, this._sortComponent);\n\n    if (moviesData.length) {\n      render(this._moviesContainerComponent, this._mainMoviesComponent);\n      this._mainMoviesListInit(moviesData);\n      render(mainElement, this._moviesContainerComponent);\n      this._sortComponent.setCallback(() => {\n        this._mainMoviesListInit(moviesData);\n      });\n      this._renderExtraMovies(topRatedMovies, EXTRA_MOVIES_HEADINGS[0]);\n      this._renderExtraMovies(mostCommentedMovies, EXTRA_MOVIES_HEADINGS[1]);\n    } else {\n      render(mainElement, new NoMoviesContainer());\n    }\n\n    this._container.querySelector(`.footer__statistics p`).textContent = `${moviesData.length} movies inside`;\n  }\n\n  _renderMovieCard(movieData, container = this._mainMoviesComponent.getMoviesList()) {\n    const movieController = new MovieController(container, this._onDataChange);\n\n    if (container === this._mainMoviesComponent.getMoviesList()) {\n      this._shownMoviesControllers.push(movieController);\n    }\n\n    movieController.render(movieData);\n  }\n\n  _renderMainMovies(iterator) {\n    const {value: moviesForRender, done: hasNoMoviesForRender} = iterator.next();\n    moviesForRender.forEach((movieData) => this._renderMovieCard(movieData));\n    this._mainMoviesComponent.toggleShowLoadButton(hasNoMoviesForRender);\n  }\n\n  _getExtraMovies(movies, parameter) {\n    const extraMovies = movies.filter(extraMoviesParameters[parameter].filter);\n    return extraMovies.length ? extraMovies.sort(extraMoviesParameters[parameter].sort).slice(0, this._extraMoviesAmount) : false;\n  }\n\n  _renderExtraMovies(movies, heading) {\n    const doesHasMovies = Boolean(movies.length);\n\n    if (doesHasMovies) {\n      const extraMoviesComponent = new ExtraMovies(heading);\n      const extraMoviesListElement = extraMoviesComponent.getMoviesListElement();\n      movies.forEach((movie) => this._renderMovieCard(movie, extraMoviesListElement));\n      render(this._moviesContainerComponent, extraMoviesComponent);\n    }\n  }\n\n  _mainMoviesListInit(moviesData) {\n    this._clearMainMovies();\n    const moviesForRender = this._sortComponent.sortData(moviesData);\n    const iterator = getNextItemsIterator(moviesForRender, ADD_MOVIES_AMOUNT, this._renderedMoviesAmount);\n    this._renderMainMovies(iterator);\n    this._mainMoviesComponent.setCallback(() => {\n      this._renderMainMovies(iterator);\n      this._renderedMoviesAmount += ADD_MOVIES_AMOUNT;\n    });\n  }\n\n  _clearMainMovies() {\n    this._shownMoviesControllers.forEach((movieController) => movieController.removeElements());\n    this._shownMoviesControllers = [];\n  }\n\n  _onDataChange(oldData, newData) {\n    const controllersOfChangedMovies = this._shownMoviesControllers.filter((controller) => controller.id === oldData.id);\n    controllersOfChangedMovies.forEach((controller) => controller.render(newData));\n  }\n}\n","import {generateCards} from './mock/card';\nimport {PageController} from './controllers/page';\n\nconst MOVIES_AMOUNT = 23;\nconst moviesData = generateCards(MOVIES_AMOUNT);\nconst pageController = new PageController(document.body);\n\npageController.render(moviesData);\n","import {shuffleArray} from '../utils/common';\nimport {EMOTIONS} from '../const';\n\nconst MAX_DESCRIPTION_SENTENSES = 6;\nconst MAX_GENRES = 3;\nconst MIN_ACTORS = 2;\nconst MAX_ACTORS = 4;\nconst MAX_WRITERS = 3;\nconst getRandomBetween = (min, max, demicalPlacesCount = 0) => (parseFloat((min + Math.random() * (max - min)) + 0.01).toFixed(demicalPlacesCount));\nconst getRandomArrayItem = (array) => array[getRandomBetween(0, array.length - 1)];\nconst getRandomBoolean = () => Boolean(Math.round(Math.random()));\n\nconst ageLimits = new Set([0, 6, 12, 16, 18]);\n\nconst titles = new Set([\n  `The Shawshank Redemption`,\n  `The Godfather`,\n  `The Dark Knight`,\n  `12 Angry Men`,\n  `Schindler's List`,\n  `The Lord of the Rings: The Return of the King`,\n  `Pulp Fiction`,\n  `Il buono, il brutto, il cattivo`,\n  `Fight Club`,\n  `The Lord of the Rings: The Fellowship of the Ring`,\n  `Forrest Gump`,\n  `Inception`,\n  `Star Wars: Episode V - The Empire Strikes Back`,\n  `The Lord of the Rings: The Two Towers`,\n  `The Matrix`,\n]);\n\nconst posters = new Set([\n  `./images/posters/made-for-each-other.png`,\n  `./images/posters/popeye-meets-sinbad.png`,\n  `./images/posters/sagebrush-trail.jpg`,\n  `./images/posters/santa-claus-conquers-the-martians.jpg`,\n  `./images/posters/the-dance-of-life.jpg`,\n  `./images/posters/the-great-flamarion.jpg`,\n  `./images/posters/the-man-with-the-golden-arm.jpg`,\n]);\n\nconst directors = new Set([\n  `Quentin Tarantino`,\n  `Christopher Nolan`,\n  `Joel Coen`,\n  `Frank Darabont`,\n  `Sergio Leone`,\n  `Wes Anderson`,\n  `Martin Scorsese`,\n  `Damien Chazelle`,\n  `Drew Goddard`,\n  `Ridley Scott`,\n  `James Ponsoldt`,\n]);\n\nconst genres = new Set([\n  `comedy`,\n  `musicle`,\n  `western`,\n  `drama`,\n  `cartoon`,\n  `mystery`,\n]);\n\nconst comments = new Set([\n  {\n    author: `Tim Macoveev`,\n    text: `Very good film! Not sorry for the time spent.`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `Mike Chakman`,\n    text: `Which movie is good? Yes, this is nonsense! The acting is terrible. Blooper on a blooper. Graphics sucks.`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `ChinWag`,\n    text: `The book was like that))) Cool like))) I can’t remember the name)))`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `derroys`,\n    text: `Awesome movie, one of the favorite in our family, great actors. Adore. I recommend.`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `Darkmus`,\n    text: `Good, funny film, why do sofa critics give such low ratings? :(`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `DarGi`,\n    text: `Surprisingly enjoyed watching this movie)`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n  {\n    author: `Barathrum`,\n    text: `A very pleasant psychological-ironic film, it looks in one breath. Cool story, a logical and interesting plot, a wonderful selection of actors. I looked with pleasure.`,\n    date: Date.now() - getRandomBetween(0, 36) * 60 * 60 * 1000,\n    emotion: getRandomArrayItem(EMOTIONS),\n  },\n]);\n\nconst writers = new Set([\n  `Anthony Mann`,\n  `Stanley Kubrick`,\n  `Martin Scorsese`,\n  `Steven Spielberg`,\n  `David Lynch`,\n  `Quentin Tarantino`,\n  `Woody Allen`,\n  `Paul Thomas Anderson`,\n  `Christopher Nolan`,\n  `Ridley Scott`,\n  `James Ponsoldt`,\n]);\n\nconst actors = new Set([\n  `Jack Nicholson`,\n  `Marlon Brando`,\n  `Robert De Niro`,\n  `Al Pacino`,\n  `Tom Hanks`,\n  `Julia Roberts`,\n  `Sandra Bullock`,\n  `Demi Moore`,\n  `Meg Ryan`,\n  `Julia Ormond`,\n  `Jennifer Aniston`,\n  `Denzel Washington`,\n]);\n\nconst countries = new Set([\n  `USA`,\n  `Italy`,\n  `Russia`,\n  `France`,\n  `England`,\n  `Belgium`,\n  `India`,\n]);\n\nconst generateAgeLimit = () => getRandomArrayItem(Array.from(ageLimits));\nconst generateTitle = () => getRandomArrayItem(Array.from(titles));\nconst generatePoster = () => getRandomArrayItem(Array.from(posters));\nconst generateGenres = () => shuffleArray(Array.from(genres)).slice(0, getRandomBetween(1, MAX_GENRES));\nconst generateComments = () => shuffleArray(Array.from(comments)).slice(0, getRandomBetween(0, comments.size));\nconst generateDirector = () => getRandomArrayItem(Array.from(directors));\nconst generateWriters = () => shuffleArray(Array.from(writers)).slice(0, getRandomBetween(1, MAX_WRITERS));\nconst generateActors = () => shuffleArray(Array.from(actors)).slice(0, getRandomBetween(MIN_ACTORS, MAX_ACTORS));\nconst generateCountry = () => getRandomArrayItem(Array.from(countries));\nconst generateReleaseDate = () => new Date(`${getRandomBetween(1960, 2019)}, ${getRandomBetween(1, 12)}, ${getRandomBetween(1, 28)}`).getTime();\n\nconst generateDescription = () => {\n  const sentenses = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`\n  .split(`. `)\n  .map((sentense, i, array) => i !== array.length - 1 ? `${sentense}.` : sentense);\n\n  return sentenses.slice(0, getRandomBetween(1, MAX_DESCRIPTION_SENTENSES)).join(` `).trim();\n};\n\nconst generateCard = (index) => {\n  return {\n    id: index,\n    comments: generateComments(),\n    movieInfo: {\n      ageLimit: generateAgeLimit(),\n      name: generateTitle(),\n      originalName: generateTitle(),\n      director: generateDirector(),\n      writers: generateWriters(),\n      actors: generateActors(),\n      release: {\n        date: generateReleaseDate(),\n        country: generateCountry(),\n      },\n      poster: generatePoster(),\n      rating: getRandomBetween(0, 9, 1),\n      duration: getRandomBetween(75, 180),\n      genres: generateGenres(),\n      description: generateDescription(),\n      isOnTheWatchlist: getRandomBoolean(),\n      isAlredyWatched: getRandomBoolean(),\n      isFavorite: getRandomBoolean(),\n    }\n  };\n};\n\nexport const generateCards = (count) => new Array(count).fill(``).map((item, index) => generateCard(index));\n","const capitalize = (string) => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nconst getNextItemsIterator = (items, itemsPartAmount, startItemsAmount) => {\n  const itemsAmount = items.length;\n  let previousItemsAmount = 0;\n\n  return {\n    next() {\n      const value = items.slice(previousItemsAmount, startItemsAmount);\n      startItemsAmount += itemsPartAmount;\n      previousItemsAmount += value.length;\n      const done = previousItemsAmount === itemsAmount;\n      return {value, done};\n    }\n  };\n};\n\nconst formatTime = (duration) => {\n  const hours = Math.floor(duration / 60);\n  const minutes = duration % 60;\n\n  return `${hours}h ${minutes}m`;\n};\n\nexport {capitalize, shuffleArray, getNextItemsIterator, formatTime};\n","import {Position} from '../const';\nimport AbstractComponent from '../components/abstract-component';\n\nconst createElement = (templateString) => {\n  const template = document.createElement(`template`);\n  template.innerHTML = templateString;\n  return template.content.firstElementChild;\n};\n\nconst render = (instanceContainer, instanceElement, place = Position.BEFOREEND) => {\n  let container = instanceContainer;\n  let element = instanceElement;\n\n  if (instanceContainer instanceof AbstractComponent) {\n    container = instanceContainer.getElement();\n  }\n\n  if (instanceElement instanceof AbstractComponent) {\n    element = instanceElement.getElement();\n  }\n\n  switch (place) {\n    case Position.BEFOREEND:\n      container.append(element);\n      break;\n    case Position.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case Position.BEFORE:\n      container.before(element);\n      break;\n    case Position.AFTER:\n      container.after(element);\n      break;\n  }\n};\n\nconst replace = (newComponent, oldComponent) => {\n  const parentElement = oldComponent.getElement().parentElement;\n  const newElement = newComponent.getElement();\n  const oldElement = oldComponent.getElement();\n\n  const isExistElements = Boolean(parentElement && newElement && oldElement);\n\n  if (isExistElements) {\n    parentElement.replaceChild(newElement, oldElement);\n  }\n};\n\nexport {createElement, render, replace};\n"],"sourceRoot":""}